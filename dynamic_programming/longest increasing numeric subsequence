/*
longest increasing subsequence (need not to be continuous)
ex:   50 3 10 7 40 50
ans:  3 7 40 50 

example 2:given array:
10 22 9 33 21 50 41 60 80 6 : initialise all with 1 then:
1  2  1  3  2  4  4 5  6  1
explaination : for 10: no previous number so 1
for 22: 10<22 i.e possible hence 2
for 9 : no smaller number hence,1
for 33: 10<33 hence 1+1=2
        22<33 hence 1+2=3
        9<33  hence 1+1=2
    max=3, hence assigned
continued for all others,for max sequence i.e. 6
*/

#include <iostream>
using namespace std;

int LIS(int arr[100],int n){
    int dp[100];
    for(int i=0;i<n;i++) dp[i]=1; //all values of dp to 1, minimum possible LIS

    int maxLIS=0;
    for(int i=1;i<n;i++){
        for(int j=0;j<i;j++){
            if(arr[i]>=arr[j]){  //line 13: if 10<33
                dp[i]=max(dp[i], dp[j]+1);  //line 16
            }
        }
        maxLIS=max(maxLIS,dp[i]);
    }
    return maxLIS;
}

int main() {
    int arr[100];
    int n;
    cin>>n;
    for(int i=0;i<n;i++) cin>>arr[i];
    cout<<LIS(arr,n);
}
 
